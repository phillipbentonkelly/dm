if (typeof bcom === "undefined") { bcom = {}; }
/*
 * Wishabi module for Boston.com prototype
 * by Jesse Marple
 There are three main parts to a typical Wishabi request:
 The apiHost and apiPath are combined to create the endpoint needed to access the results. There are a handful of meta that is also necessary to retreive the circulars. Those include: the vendorKey, and flyerId - our renamed version of the mtypeId that is unique to each carousel and is provided by Wishabi per instance of a particular set of circulars.
*/
bcom.wishabi = (function(){
    'use strict';

    var module = {};

    //setting some vars that are not accessible outside of this function
    var apiHost = "http://api.flyertown.ca";

    var apiPath = "/flyermodules";

    var vendorKey = "5e30bf9636f28066"; // other key? "840df3e7ffe609d1";

    module.init = function(){
    // find all of our gigya instances on the page and do something with them
        $('.wishabi').not('.rendered').each(function(){
            // we are looking for .not('.rendered'), meaning any wishabi instance that hasn't already been rendered on to the page, we should skip those.
            // let's get the data we need to call getFlyers
            var $el = $(this);
            var flyerId = $el.data('wishabi-id');
            // let's go make some flyers!
            getFlyers(flyerId,$el);
        });
    };

    function getFlyers(flyerId,$el){
        // get the wishabi mustace template
        var wishabiTemplate = $('#wishabi_flyer').html();
        // make the request
        $.ajax({
          url: apiHost + apiPath,
          data: { mtypeid : flyerId, key: vendorKey, t: new Date().getTime()},
          crossDomain: true,
          dataType: "jsonp"
        }).done(function(data){
            //render our data into the template and save to a variable
            var output = Mustache.to_html(wishabiTemplate, data);
            // the original element, $el, that was found from the init function and passed in to getFlyers is now our anchor to fill with markup+data generated by Mustace and ajax. We add the class of 'rendered' to the $el so we know not to touch this in the future should getFlyers be rendered again - possibly with cicurals in the stream.
            $el.html(output).addClass('rendered');
        });
    };

    return module;

}());

// This is old Wishabi JS script for the old widget, so we don't need it anymore. That's why it is commented out.
// The new widget is in $configurationURI/Framework/skins/components/wishabi/wishabi.jpt 

//wishabi kickoff
// $(function(){
//     //is there even anything to wishabi-ize?
//     if($('.wishabi').length > 0 ){
//         bcom.wishabi.init();
//     };
//     //rendering a new wishabi module after the page has run is as easy as adding the markup, and then running bcom.wishabi.init() again. Rendered wishabi modules will have the class of 'rendered' added to them and will be skipped from rerendering
// });