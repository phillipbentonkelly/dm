<%@ page language="java" contentType="application/json; charset=UTF-8" pageEncoding="UTF-8" %>	
<%@page import="java.util.*"%>
<%@page import = "java.lang.Integer"%>
<%@page import="java.text.SimpleDateFormat"%>
<p:template contentType="application/json" />

<p:out var="stream" value="${cacheScope.stream}" />
<p:out var="filter" value="${cacheScope.filter}" />
<p:out var="limit" value="${cacheScope.limit}" />
<p:out var="status" value="${cacheScope.status}" />
<p:out var="startingdate" value="${cacheScope.startingdate}" />

<%-- mock homepage to news for dev testing --%>
<c:if test="${stream == 'homepage'}"><c:set var="stream">news</c:set></c:if>

<c:if test="${empty stream}"><c:set var="stream">not-specified</c:set></c:if>
<c:if test="${empty filter}"><c:set var="filter">all</c:set></c:if>
<c:if test="${empty limit}"><c:set var="limit">25</c:set></c:if>
<c:if test="${empty status}"><c:set var="status">Approved</c:set></c:if>

<%-- add a basic test that limit is numeric --%>
<c:catch var="isNumber">
   <c:set var="x" value="${limit * 1}" />
</c:catch>
<c:if test="${isNumber != null}">
     <c:set var="limit">25</c:set>
</c:if>

<%

	SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmssS");
	format.setTimeZone(TimeZone.getTimeZone("GMT"));
	
    String tsDateStr = format.format(new Date());

	pageContext.setAttribute("timestamp", tsDateStr);

%>
<%--  if not specified, use timestamp but lop of ms  --%>
<%--  <c:if test="${empty startingdate}"><c:set var="startingdate">${fn:substring(timestamp,0,14)}</c:set></c:if> --%>
<%--  if not specified, use a maximum date value cannot pass seem to pass a value of <qm:TMaxDateTime/>  into the query  --%>
<c:if test="${empty startingdate}"><c:set var="startingdate" value="99991231235900"/></c:if>


<% 
	String[] queryParams = new String[5];
	queryParams[0] = (String)pageContext.getAttribute("stream");
	queryParams[1] = (String)pageContext.getAttribute("filter");
	queryParams[2] = (String)pageContext.getAttribute("startingdate");
	queryParams[3] = (String)pageContext.getAttribute("limit");
 	queryParams[4] = (String)pageContext.getAttribute("status");
    
	pageContext.setAttribute("queryParams", queryParams);
	

%>


<p:url var="whereAmI" value="$configurationURI/Framework/sandbox/jflaherty/getJson.jpt" public="true"/>

<%-- mock a proxy for dev to qa to get some data
<c:choose>
	<c:when test="${fn:contains(whereAmI,'devedit') and stream != 'businessjab' }">
		<c:import url="http://r.qaweb.boston.com/fragment$configurationURI/Framework/sandbox/jflaherty/getJsonbyStream.jpt">
			<c:param name="stream">${stream}</c:param>
			<c:param name="filter">${filter}</c:param>
			<c:param name="limit">${limit}</c:param>
			<c:param name="startingdate">${startingdate}</c:param>
		</c:import>
	</c:when>
	<c:otherwise>
	 --%>
	 <%-- determine which query we want to run based on date parameter --%>
	<c:choose>
		<c:when test="${startingdate != '99991231235900'}">
			<%-- do not use a vquery for pagination results --%>
			<p:import var="qtext" url="$configurationURI/Framework/queries/bdc_stream_filterkey_next.query"/> 
			<p:executeQuery var="q" >
				<p:queryBody name="qtext"/> 
				<%-- parameter names must be legal groovy variables starting with letters not just numeric --%>
				<p:param name="stream" value="${stream}"/>
				<p:param name="filter" value="${filter}"/>
				<p:param name="limit" value="${limit}"/>
				<p:param name="startingdate" value="${startingdate}"/>
				<p:param name="status" value="${status}"/>
			</p:executeQuery>	
		</c:when>
		<c:otherwise>
			<p:getCollection path="$configurationURI/Framework/queries/bdc_stream_filterkey.vquery" virtualParams="${queryParams}" var="q" />
		</c:otherwise>	
	</c:choose>
	<p:out var="maxLastStreamDate" value="0" />
{ "stream": "${stream}",
	"filter": "${filter}",
   "timestamp": "${timestamp}",
   "limit": "${limit}",
   "startingdate": "${startingdate}",
	"data": [
	
		<%-- temporarily look for scoreboard for this stream 
			- dwc must be match stream-id and be in original location
			- we have to force is_pinned in order to keep it at the top of the stream display
			- we have to handle inserting commas between elements and also in front of query results if 
			  we added any scoreboards
		--%>
		<p:getObject path="$portalURI/WebPages/__COMPONENTS__/__STREAMS__/${stream}.dwc" var="dwcObj" onError="ignore" />	
		
		<c:if test="${not empty dwcObj}">
			<p:getPageZone name="scoreboard" var="zone" 
						   url="$portalURI/WebPages/__COMPONENTS__/__STREAMS__/${stream}.dwc" />
				<p:out var="scoreboards"  		   value="${zone.size}"/>
				<c:if test="${zone.size > 0}">
					<p:url var="getJsonPath" value="/fragment$configurationURI/Framework/sandbox/jflaherty/getJson.jpt" type="context" public="true"  />
				
					<c:forEach items="${zone.items}" var="x" varStatus="dwcStatus">
						<p:object webObject="${x}" content="c" metadata="meta" webType="WT" uuid="uuid"/>
						<p:json url="${getJsonPath}?uuid=${uuid}&stream=${stream}&modelOnly=1" var="justjson"/>
						<c:set target="${justjson}" property="is_pinned" value="${true}"/>
						<p:out value="${justjson}"/>
						<c:if test="${not dwcStatus.last}">,
						</c:if>					
					</c:forEach>
				</c:if>
		</c:if>
		
	<c:forEach items="${q.items}" var="i" begin="0" end="${limit}" varStatus="status">
		<c:if test="${not empty scoreboards && scoreboards >0 && status.first}">,
		</c:if>
		<p:include styleName="$configurationURI/Framework/sandbox/jflaherty/getJson.jpt" webObject="${i}">
			<p:param name="modelOnly" value="1"/>
			<p:param name="stream" value="${stream}"/>
		</p:include>
		<p:object webObject="${i}" metadata="meta"/> 
		<%--  <p:out var="lastStreamDate" xvalue="$meta//OnlineProducts/OnlineProduct[child::ProductName='Boston.com']/Streams/Stream[StreamId=$stream]/LastStreamDate" />  --%>
		<p:out var="lastStreamDate" xvalue="$meta//OnlineProducts/OnlineProduct[child::ProductName='Boston.com']/LastPublicationDate" />
		<c:if test="${ lastStreamDate gt maxLastStreamDate }">
			<p:out var="maxLastStreamDate" value="${lastStreamDate}"/>
		</c:if>
		<c:if test="${not status.last}">,
		</c:if>

		
	</c:forEach>
	
	],
	"maxLastStreamDate": "${maxLastStreamDate}"
}

	
	<%-- </c:otherwise> 
</c:choose>--%>

